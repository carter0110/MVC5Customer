@using TaskMVC.Models
@model IPagedList<TaskMVC.Models.客戶資料>

@{
    ViewBag.Title = "Index";
}

@section styles
{
    <link href="~/Content/PagedList.css" rel="stylesheet" />
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Customer", FormMethod.Get))
{
    @Html.DisplayNameFor(model => model.FirstOrDefault().客戶名稱)
    @Html.TextBox("customerName", null, new { @class = "form-control" })
    <br />
    @Html.DisplayNameFor(model => model.FirstOrDefault().客戶分類)
    <select class="form-control" id="customerType" name="customerType">
        @foreach (var item in ViewBag.客戶分類List as IEnumerable<SelectListItem>)
        {
            <option value="@(item.Value)"@(item.Selected ? " selected='selected'" : "") >@item.Text</option>
        }
    </select>
    @*@Html.DropDownList("customerType", ViewBag.客戶分類List as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })*@

    <input type="submit" value="搜尋" class="btn btn-default" />
}
<br />
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @{
                var request = HttpContext.Current.Request;
                var orderCustomerName = request.QueryString["orderCustomerName"] + "";
                var icon = orderCustomerName == "asc" ? "▲" : (orderCustomerName == "desc" ? "▼" : "");
            }
            @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstOrDefault().客戶名稱) + icon, "Index", new { orderCustomerName= orderCustomerName == "asc" ? "desc" : "asc", customerName = request.QueryString["customerName"], customerType = request.QueryString["customerType"] }) 
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().統一編號)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().電話)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().傳真)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().地址)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().客戶分類)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.客戶名稱)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.統一編號)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.電話)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.傳真)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.地址)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @(item.客戶分類 != null ? ((CustomerUsing.CustomerType)item.客戶分類).ToString() : "")
        </td>
        <td>
            @Html.ActionLink("Edit", "Update", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>

@Html.PagedListPager(Model, page=> Url.Action("Index", new { page }))